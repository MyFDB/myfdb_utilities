#!/usr/bin/env ruby

lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'myfdb'
require 'fileutils'
require 'cronedit'
require 'version'
require 'commander/import'
require 'command/helpers'
require 'command/settings'

include Command::Helpers

program :name, 'MyFDB Utilities'
program :version, Myfdb::VERSION
program :description, 'Misc tasks related to myfdb.com'

command :init do |c|
  c.syntax = 'myfdb init'
  c.description = 'Set up api key, folders and crontask for myfdb'

  c.action do |args, options|
    settings = ask('API Key: ') + '|'
    settings << ask('API Secret: ') + '|'
    settings << ask('Host (for the live site, type in www.myfdb.com): ')
    settings << ask('Protocol (for the live site, type in https): ')

    File.open(settings_file, "w") { |f| f.write(settings) }

    unless File.exists?(main_directory)
      FileUtils.mkdir main_directory
      say "A directory has been created in #{main_directory}"
    end

    if agree('Install cron task for processing (yes/no)?')
      CronEdit::Crontab.Add  \
        'myfdb',
        :command => "myfdb upload_images >> #{main_directory}/error.log 2>&1"
    else
      CronEdit::Crontab.Remove 'myfdb'
    end
  end
end

command :upload_images do |c|
  c.syntax = 'myfdb upload_images'
  c.description = 'Upload images directly to My Fashion Database'

  c.action do |args, options|
    Myfdb::Uploader.process(settings) unless process_running?('upload_images')
  end
end


